{"version":3,"sources":["types/Status.tsx","TodosContext.tsx","Components/LocalStorage.ts","Components/Header.tsx","Components/TodoItem.tsx","Components/Todos.tsx","Components/Footer.tsx","App.tsx","index.tsx"],"names":["Status","TodosContext","React","createContext","todos","selectStatus","All","filteredTodos","addTodos","setSelectStatus","changeStatus","deleteTodo","changeTitle","filterTodos","deletedCompled","allCompleted","TodosProvider","children","key","startValue","useState","currentValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useLocalStorage","setTodos","useCallback","filterStatus","Active","filter","todo","completed","Completed","useMemo","Provider","title","newTodo","id","Date","map","changedTitle","prevTodo","allCompleteded","every","updateCompletedTodos","Header","setNewTodo","useContext","className","onSubmit","event","preventDefault","trim","type","data-cy","placeholder","onChange","target","TodoItem","setChangedTitle","editingId","setEditingId","isEditing","setIsEditing","input","useRef","updateTodoTitle","trimmedTitle","current","focus","classNames","editing","e","onKeyUp","onBlur","autoFocus","checked","onDoubleClick","onClick","Todos","Footer","activeTodoAmount","length","handleselectStatus","status","href","App","htmlFor","root","document","getElementById","render"],"mappings":"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","file":"static/js/main.a89dae17.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import React, { useState, useMemo, useCallback } from 'react';\nimport { Status } from './types/Status';\nimport { Todo } from './types/Todo';\nimport { useLocalStorage } from './Components/LocalStorage';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ninterface TodosContextType {\n  todos: Todo[];\n  filteredTodos: Todo[];\n  selectStatus: Status;\n  addTodos: (title: string) => void;\n  setSelectStatus: (status: Status) => void;\n  changeStatus: (id: number) => void;\n  deleteTodo: (id: number) => void;\n  changeTitle: (id: number, changedTitle: string) => void;\n  filterTodos: (filterStatus: Status, todos: Todo[]) => Todo[];\n  deletedCompled: () => void;\n  allCompleted: () => void;\n}\n\nexport const TodosContext = React.createContext<TodosContextType >({\n  todos: [],\n  selectStatus: Status.All,\n  filteredTodos: [],\n  addTodos: () => {},\n  setSelectStatus: () => {},\n  changeStatus: () => {},\n  deleteTodo: () => {},\n  changeTitle: () => {},\n  filterTodos: () => [],\n  deletedCompled: () => {},\n  allCompleted: () => {},\n});\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useLocalStorage<Todo[]>('todos', []);\n\n  const [selectStatus, setSelectStatus] = useState(Status.All);\n\n  const addTodos = (title: string) => {\n    const newTodo: Todo = {\n      id: +new Date(),\n      title,\n      completed: false,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const changeStatus = (id: number) => {\n    setTodos(todos.map((todo) => (todo.id === id\n      ? { ...todo, completed: !todo.completed }\n      : todo)));\n  };\n\n  const deleteTodo = (id: number) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const changeTitle = (id: number, changedTitle: string) => {\n    setTodos(todos.map(prevTodo => (prevTodo.id === id\n      ? { ...prevTodo, title: changedTitle }\n      : prevTodo)));\n  };\n\n  const deletedCompled = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n  };\n\n  const filterTodos = useCallback((filterStatus: Status) => {\n    switch (filterStatus) {\n      case Status.All:\n        return todos;\n\n      case Status.Active:\n        return todos.filter(todo => !todo.completed);\n\n      case Status.Completed:\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  }, [todos]);\n\n  const filteredTodos = useMemo(() => {\n    return filterTodos(selectStatus);\n  }, [selectStatus, filterTodos]);\n\n  const allCompleted = () => {\n    const allCompleteded = todos.every((todo) => todo.completed);\n\n    const updateCompletedTodos = todos.map((todo) => ({\n      ...todo, completed: !allCompleteded,\n    }));\n\n    setTodos(updateCompletedTodos);\n  };\n\n  return (\n    <TodosContext.Provider\n      value={{\n        todos,\n        addTodos,\n        selectStatus,\n        setSelectStatus,\n        changeStatus,\n        deleteTodo,\n        changeTitle,\n        filterTodos,\n        deletedCompled,\n        filteredTodos,\n        allCompleted,\n      }}\n    >\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport function useLocalStorage<T>(\n  key:string, startValue: T,\n): [T, (v: T) => void] {\n  const [value, setValue] = useState(() => {\n    const currentValue = localStorage.getItem(key);\n\n    return currentValue ? JSON.parse(currentValue) : startValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n}\n","import React, { useContext, useState } from 'react';\nimport { TodosContext } from '../TodosContext';\n\nexport const Header: React.FC = () => {\n  const [newTodo, setNewTodo] = useState('');\n  const { addTodos } = useContext(TodosContext);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!newTodo.trim()) {\n      return;\n    }\n\n    addTodos(newTodo);\n    setNewTodo('');\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTodo(event.target.value);\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>Todos</h1>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          data-cy=\"createTodo\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={newTodo}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, {\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { TodosContext } from '../TodosContext';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { title, completed, id } = todo;\n  const {\n    changeStatus,\n    deleteTodo,\n    changeTitle,\n  } = useContext(TodosContext);\n\n  const [changedTitle, setChangedTitle] = useState(title);\n  const [editingId, setEditingId] = useState<number | null>(null);\n  const [isEditing, setIsEditing] = useState(editingId === id);\n  const input = useRef<HTMLInputElement | null>(null);\n\n  const updateTodoTitle = () => {\n    const trimmedTitle = changedTitle.trim();\n\n    if (trimmedTitle) {\n      setChangedTitle(trimmedTitle);\n      setIsEditing(false);\n      changeTitle(id, trimmedTitle);\n    } else {\n      deleteTodo(id);\n    }\n  };\n\n  const handlechangeStatus = () => {\n    changeStatus(id);\n  };\n\n  const handleEditing = () => {\n    setIsEditing(true);\n    setEditingId(id);\n  };\n\n  const handleDeleteTodo = () => {\n    deleteTodo(id);\n  };\n\n  const cancelEditing = () => {\n    setIsEditing(false);\n    setChangedTitle(title);\n    setEditingId(null);\n  };\n\n  const handleChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setChangedTitle(e.target.value);\n  };\n\n  const handlekeyUp = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      updateTodoTitle();\n    } else if (e.key === 'Escape') {\n      cancelEditing();\n    }\n  };\n\n  useEffect(() => {\n    if (editingId === id && input.current) {\n      input.current.focus();\n    }\n  }, [isEditing, editingId, id]);\n\n  useEffect(() => {\n    if (!isEditing) {\n      setEditingId(null);\n    }\n  }, [isEditing]);\n\n  return (\n    <li className={classNames({\n      completed,\n      editing: isEditing,\n    })}\n    >\n      {!isEditing ? (\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={`toggle-${id}`}\n            checked={completed}\n            onChange={handlechangeStatus}\n          />\n          <label\n            onDoubleClick={handleEditing}\n          >\n            {title}\n          </label>\n          {/* eslint-disable-next-line */}\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            data-cy=\"deleteTodo\"\n            onClick={handleDeleteTodo}\n          />\n        </div>\n      )\n        : (\n          <input\n            type=\"text\"\n            className=\"edit\"\n            value={changedTitle}\n            onChange={handleChangeTitle}\n            onKeyUp={handlekeyUp}\n            onBlur={updateTodoTitle}\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autoFocus\n          />\n        )}\n    </li>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../types/Todo';\nimport { TodoItem } from './TodoItem';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const Todos: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"todo-list\" data-cy=\"todosList\">\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React, { useContext, useMemo } from 'react';\nimport { TodosContext } from '../TodosContext';\nimport { Status } from '../types/Status';\n\nexport const Footer: React.FC = () => {\n  const {\n    todos,\n    selectStatus,\n    setSelectStatus,\n    deletedCompled,\n  } = useContext(TodosContext);\n\n  const activeTodoAmount = useMemo(() => {\n    return todos.filter(todo => !todo.completed).length;\n  }, [todos]);\n\n  const handleselectStatus = (status: Status) => () => {\n    setSelectStatus(status);\n  };\n\n  const handleClearCompleted = () => {\n    deletedCompled();\n  };\n\n  return (\n    <>\n      {todos.length > 0 && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\" data-cy=\"todosCounter\">\n            {`${activeTodoAmount} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className={selectStatus === Status.All ? 'selected' : ''}\n                onClick={handleselectStatus(Status.All)}\n                data-cy=\"todosFilter\"\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                className={selectStatus === Status.Active ? 'selected' : ''}\n                onClick={handleselectStatus(Status.Active)}\n                data-cy=\"todosFilter\"\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                className={selectStatus === Status.Completed\n                  ? 'selected'\n                  : ''}\n                onClick={handleselectStatus(Status.Completed)}\n                data-cy=\"todosFilter\"\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          { activeTodoAmount < todos.length && (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={handleClearCompleted}\n            >\n              Clear completed\n            </button>\n          )}\n        </footer>\n      )}\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useContext } from 'react';\nimport { Header } from './Components/Header';\nimport { Todos } from './Components/Todos';\nimport { Footer } from './Components/Footer';\nimport { TodosContext } from './TodosContext';\n\nexport const App: React.FC = () => {\n  const { todos, allCompleted, filteredTodos } = useContext(TodosContext);\n\n  return (\n    <div className=\"todoapp\">\n      <Header />\n      <>\n        <section className=\"main\">\n          {todos.length > 0 && (\n            <>\n              <input\n                type=\"checkbox\"\n                id=\"toggle-all\"\n                className=\"toggle-all\"\n                data-cy=\"toggleAll\"\n                onClick={allCompleted}\n              />\n              <label htmlFor=\"toggle-all\">Mark all as complete</label>\n              <Todos todos={filteredTodos} />\n            </>\n          )}\n        </section>\n      </>\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\nimport { TodosProvider } from './TodosContext';\n\nconst root = document.getElementById('root');\n\nrender(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  root,\n);\n"],"sourceRoot":""}